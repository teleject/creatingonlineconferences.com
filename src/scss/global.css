@charset "UTF-8";
/**
 * SIZE SCALE
 * This is a Major Third scale that powers all the utilities that
 * it is relevant for (font-size, margin, padding). All items are
 * calcuated off these tokens.
 */
/**
 * COLORS
 * Colors are shared between backgrounds and text by default. 
 * You can also use them to power borders, fills or shadows, for example.
 */
/**
 * UTIL PREFIX
 * All pre-built, framework utilities will have this prefix. 
 * Example: the wrapper utility is '.sf-wrapper' because the default
 * prefix is 'sf-'.
 */
/**
 * METRICS
 * Various misc metrics to use around the site
 */
/**
 * CORE CONFIG
 * This powers everything from utility class generation to breakpoints
 * to enabling/disabling pre-built components/utilities.
 */
/**
 * BASE SIZE
 * All calculations are based on this. It’s recommended that
 * you keep it at 1rem because that is the root font size. You
 * can set it to whatever you like and whatever unit you like.
 */
/**
 * SIZE SCALE
 * This is a Major Third scale that powers all the utilities that
 * it is relevant for (font-size, margin, padding). All items are
 * calcuated off the base size, so change that and cascade across
 * your whole project.
 */
/**
 * COLORS
 * Colors are shared between backgrounds and text by default. 
 * You can also use them to power borders, fills or shadows, for example.
 */
/**
 * UTIL PREFIX
 * All pre-built, framework utilities will have this prefix. 
 * Example: the wrapper utility is '.sf-wrapper' because the default
 * prefix is 'sf-'.
 */
/**
 * CORE CONFIG
 * This powers everything from utility class generation to breakpoints
 * to enabling/disabling pre-built components/utilities.
 */
/**
 * GET CONFIG VALUE FUNCTION
 * Returns back a 1 dimensional (key value pair) config value if available.
 *
 * @param {string} $key - The key of the config value that you want
 * @param {string{ $group - The group within $stalfos-config where that $key lives
 */
/**
 * GET COLOR FUNCTION
 *
 * Function tries to match the passed $key with the $stalfos-colors map. Returns null
 * if it can’t find a match.
 *
 * @param {string} $key - The color that you want to get 
 */
/**
 * GET SIZE FUNCTION
 *
 * Function tries to match the passed $ratio-key with the $stalfos-size-scale. Returns null
 * if it can’t find a match.
 *
 * @param {string} $ratio-key - The size ratio that you want to get 
 */
/* Box sizing rules */
* {
  box-sizing: border-box;
}

*:before,
*:after {
  box-sizing: inherit;
}

/* Remove margin and padding from elements */
body,
h1,
h2,
h3,
h4,
p,
ul,
ol,
li,
dd,
figure,
figcaption,
dl,
dd,
dt {
  margin: 0px;
  padding: 0px;
}

body {
  /* Hide persistent scrollbar in IE (10/11) and Edge */
  -ms-overflow-style: -ms-autohiding-scrollbar;
  /* Anchor links will transition rather than skip */
  scroll-behavior: smooth;
  /* Reset font size to 1rem, in case it has a pixel value */
  font-size: 1rem;
  min-height: 100vh;
}

/* Remove list styles on ul, ol elements with a class attribute */
ul[class],
ol[class] {
  list-style: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration: underline;
  text-decoration-skip-ink: auto;
  cursor: pointer;
}

/* Normalise form field line-height in WebKit */
input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder,
select::-webkit-input-placeholder {
  line-height: normal;
}

/* Make images responsive */
img {
  max-width: 100%;
}

/* Remove _all_ animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  * {
    -webkit-animation: none !important;
    animation: none !important;
    transition: none !important;
    scroll-behavior: auto !important;
  }
}

/**
 * ICON UTILITY
 * A handy little utility that by default, sets your icons to 1em, width and height. 
 * This means that the icon will scale with its parent's font size.
 * You can change the base size, class prefix and block name below.
 */
/**
 * FLOW UTILITY
 * Add space between sibling elements in a (default selector) .sf-flow parent. 
 * The default space value is 1em which will be the font-size of the element that
 * has the margin-top applied to it. The `flow-space` custom property means that the 
 * cascade can be utilised if needed. 
 * Block and prefix can be configured below.
 */
.sf-flow {
  --flow-space: 1em;
}

.sf-flow > * + * {
  margin-top: 1em;
  margin-top: var(--flow-space);
}

/**
 * WRAPPER UTILITY
 * A handy container util that sets a max-width and centers itself, using auto margin.
 * You can configure the max width, gutter, class prefix and even the block name.
 * Default selector: '.sf-wrapper'.
 */
/**
 * APPLY UTILITY MIXIN
 * Grab the property and value of one of the $stalfos-config utilities
 * that the generator will generate a class for. 
 *
 * @param {string} $key - The configured utility’s key
 * @param {string} $value-key - The value key that you are looking for within the utilty
 */
/**
 * BOUNCE SCROLL
 * An overflow helper that gives you bouncy/intertia overflow scrolling
 * in WebKit (iOS) browsers.
 */
/**
 * HOVER MIXIN
 * A mixin that fences hover styles in a media query. You can also wrap a focus style
 * which is applied outside of the media query. Pointer accuracy is also applied.
 *
 * @param {bool} $include-focus - A flag that adds a '&:focus' selector if true. Default: false
 * @param {string} $pointer-accuracy - The value for the `pointer` media-query. Default: 'fine'
 */
/**
 * MEDIA QUERY MIXIN
 * Pass in the key of one of your breakpoints set in `$stalfos-config['breakpoints']`
 * and this mixin will generate the @media query with your configured value.
 *
 * @param {string} $key - The key of your configured breakpoint
 */
/**
 * PLACEHOLDER COLOR MIXIN
 * Apply text color an input’s placeholder attribute
 *
 * @param {string} $color - The color (hex,rgb(a),hsl(a) that you want the placeholder to be
 */
/**
 * CYCLE MIXIN
 * A simple worker that loops every element in the config
 * and pushes it into the collection processor
 * 
 * @param {string} $prefix - An optional prefix that is stuck to the front of selectors
 * @param {bool} $is-breakpoint - A flag for the responsive generation to use to determine wether to run or not
 */
/**
 * PROCESS COLLECTION MIXIN
 * Takes a passed collection and finds utility classes to generate. 
 * It’ll loop through breakpoints, too and generate responsive utilities 
 * where required
 *
 * @param {map} $collection - The '$stalfos-config' config item 
 * @param {string} $prefix - An optional prefix that is stuck to the front of selectors
 * @param {string} $selector - The CSS selector that should be generated
 * @param {bool} $is-breakpoint - A flag for the responsive generation to use to determine wether to run or not
 */
/**
 * GENERATE CSS MIXIN
 * The final CSS generator that takes the process params and generates
 * a CSS utility.
 *
 * @param {string} $selector - The CSS selector that should be generated
 * @param {string} $property - The CSS property that this utility affects
 * @param {map} $items - The collection of utility items to generate classes for
 */
.align-start {
  align-items: flex-start;
}

.align-center {
  align-items: center;
}

.align-end {
  align-items: flex-end;
}

.bg-primary {
  background: #173854;
}

.bg-primary-shade {
  background: #102538;
}

.bg-primary-glare {
  background: #22547c;
}

.bg-highlight {
  background: #ffb325;
}

.bg-light {
  background: #FFFFFC;
}

.bg-mid {
  background: #ffb325;
}

.bg-dark {
  background: #663300;
}

.bg-slate {
  background: #404040;
}

.color-primary {
  color: #173854;
}

.color-primary-shade {
  color: #102538;
}

.color-primary-glare {
  color: #22547c;
}

.color-highlight {
  color: #ffb325;
}

.color-light {
  color: #FFFFFC;
}

.color-mid {
  color: #ffb325;
}

.color-dark {
  color: #663300;
}

.color-slate {
  color: #404040;
}

.box-block {
  display: block;
}

.box-flex {
  display: flex;
}

.box-inline-flex {
  display: inline-flex;
}

.box-hide {
  display: none;
}

.font-base {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

.font-serif {
  font-family: 'Lora', serif;
}

.gap-top-300 {
  margin-top: 0.8rem;
}

.gap-top-500 {
  margin-top: 1.25rem;
}

.gap-top-600 {
  margin-top: 1.56rem;
}

.gap-top-700 {
  margin-top: 1.95rem;
}

.gap-top-800 {
  margin-top: 2.44rem;
}

.gap-top-900 {
  margin-top: 3.05rem;
}

.gap-top-base {
  margin-top: 1rem;
}

.gap-top-max {
  margin-top: 4rem;
}

.gap-bottom-300 {
  margin-bottom: 0.8rem;
}

.gap-bottom-500 {
  margin-bottom: 1.25rem;
}

.gap-bottom-600 {
  margin-bottom: 1.56rem;
}

.gap-bottom-700 {
  margin-bottom: 1.95rem;
}

.gap-bottom-800 {
  margin-bottom: 2.44rem;
}

.gap-bottom-900 {
  margin-bottom: 3.05rem;
}

.gap-bottom-base {
  margin-bottom: 1rem;
}

.gap-bottom-max {
  margin-bottom: 4rem;
}

.leading-tight {
  line-height: 1.2;
}

.leading-mid {
  line-height: 1.5;
}

.leading-loose {
  line-height: 1.7;
}

.measure-long {
  max-width: 75ch;
}

.measure-short {
  max-width: 60ch;
}

.measure-compact {
  max-width: 40ch;
}

.pad-top-300 {
  padding-top: 0.8rem;
}

.pad-top-500 {
  padding-top: 1.25rem;
}

.pad-top-600 {
  padding-top: 1.56rem;
}

.pad-top-700 {
  padding-top: 1.95rem;
}

.pad-top-800 {
  padding-top: 2.44rem;
}

.pad-top-900 {
  padding-top: 3.05rem;
}

.pad-top-base {
  padding-top: 1rem;
}

.pad-top-max {
  padding-top: 4rem;
}

.pad-bottom-300 {
  padding-bottom: 0.8rem;
}

.pad-bottom-500 {
  padding-bottom: 1.25rem;
}

.pad-bottom-600 {
  padding-bottom: 1.56rem;
}

.pad-bottom-700 {
  padding-bottom: 1.95rem;
}

.pad-bottom-800 {
  padding-bottom: 2.44rem;
}

.pad-bottom-900 {
  padding-bottom: 3.05rem;
}

.pad-bottom-base {
  padding-bottom: 1rem;
}

.pad-bottom-max {
  padding-bottom: 4rem;
}

.pad-left-300 {
  padding-left: 0.8rem;
}

.pad-left-500 {
  padding-left: 1.25rem;
}

.pad-left-600 {
  padding-left: 1.56rem;
}

.pad-left-700 {
  padding-left: 1.95rem;
}

.pad-left-800 {
  padding-left: 2.44rem;
}

.pad-left-900 {
  padding-left: 3.05rem;
}

.pad-left-base {
  padding-left: 1rem;
}

.pad-left-max {
  padding-left: 4rem;
}

.space-between {
  justify-content: space-between;
}

.space-around {
  justify-content: space-around;
}

.space-before {
  justify-content: flex-end;
}

.stack-300 {
  z-index: 0;
}

.stack-400 {
  z-index: 10;
}

.stack-500 {
  z-index: 20;
}

.stack-600 {
  z-index: 30;
}

.stack-700 {
  z-index: 40;
}

.ta-right {
  text-align: right;
}

.ta-left {
  text-align: left;
}

.ta-center {
  text-align: center;
}

.text-300 {
  font-size: 0.8rem;
}

.text-500 {
  font-size: 1.25rem;
}

.text-600 {
  font-size: 1.56rem;
}

.text-700 {
  font-size: 1.95rem;
}

.text-800 {
  font-size: 2.44rem;
}

.text-900 {
  font-size: 3.05rem;
}

.text-base {
  font-size: 1rem;
}

.text-max {
  font-size: 4rem;
}

.weight-light {
  font-weight: 300;
}

.weight-regular {
  font-weight: 400;
}

.weight-mid {
  font-weight: 600;
}

.weight-bold {
  font-weight: 700;
}

.width-full {
  width: 100%;
}

.width-half {
  width: 50%;
}

.width-quarter {
  width: 25%;
}

.width-third {
  width: 33.33333%;
}

@media screen and (min-width: 48rem) {
  .md\:align-start {
    align-items: flex-start;
  }
  .md\:align-center {
    align-items: center;
  }
  .md\:align-end {
    align-items: flex-end;
  }
  .md\:box-block {
    display: block;
  }
  .md\:box-flex {
    display: flex;
  }
  .md\:box-inline-flex {
    display: inline-flex;
  }
  .md\:box-hide {
    display: none;
  }
  .md\:space-between {
    justify-content: space-between;
  }
  .md\:space-around {
    justify-content: space-around;
  }
  .md\:space-before {
    justify-content: flex-end;
  }
  .md\:ta-right {
    text-align: right;
  }
  .md\:ta-left {
    text-align: left;
  }
  .md\:ta-center {
    text-align: center;
  }
  .md\:text-300 {
    font-size: 0.8rem;
  }
  .md\:text-500 {
    font-size: 1.25rem;
  }
  .md\:text-600 {
    font-size: 1.56rem;
  }
  .md\:text-700 {
    font-size: 1.95rem;
  }
  .md\:text-800 {
    font-size: 2.44rem;
  }
  .md\:text-900 {
    font-size: 3.05rem;
  }
  .md\:text-base {
    font-size: 1rem;
  }
  .md\:text-max {
    font-size: 4rem;
  }
  .md\:width-full {
    width: 100%;
  }
  .md\:width-half {
    width: 50%;
  }
  .md\:width-quarter {
    width: 25%;
  }
  .md\:width-third {
    width: 33.33333%;
  }
}

/**
 * DARK MODE MIXIN
 * 
 * A little wrapper that lets you define your dark mode custom 
 * properties in a way that supports the theme toggle web component
 */
:root {
  --color-primary: #173854;
  --color-primary-shade: #102538;
  --color-primary-glare: #22547c;
  --color-highlight: #ffb325;
  --color-light: #FFFFFC;
  --color-mid: #ffb325;
  --color-dark: #663300;
  --color-slate: #404040;
  --color-mode: 'light';
  --color-bg: #FFFFFC;
  --color-bg-glare: #FFFFFC;
  --color-text: #663300;
  --color-text-glare: #663300;
  --color-selection-text: #FFFFFC;
  --color-selection-bg: #663300;
  --color-stroke: #ffb325;
  --color-action-bg: #173854;
  --color-action-text: #FFFFFC;
  --color-theme-primary: #173854;
  --color-theme-primary-glare: #22547c;
  --color-theme-highlight: #ffb325;
  --color-theme-highlight-block: #ffb325;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-mode: 'dark';
  }
  :root:not([data-user-color-scheme]) {
    --color-bg: #663300;
    --color-bg-glare: #404040;
    --color-text: #FFFFFC;
    --color-selection-text: #663300;
    --color-selection-bg: #FFFFFC;
    --color-stroke: #404040;
    --color-theme-primary: #8bb8df;
    --color-theme-primary-glare: #b3d2ea;
    --color-action-bg: var(--color-theme-primary-glare);
    --color-action-text: #663300;
    --color-theme-highlight: #ffb325;
    --color-theme-highlight-block: #404040;
    --color-theme-feature-text: #ffb325;
  }
}

[data-user-color-scheme='dark'] {
  --color-bg: #663300;
  --color-bg-glare: #404040;
  --color-text: #FFFFFC;
  --color-selection-text: #663300;
  --color-selection-bg: #FFFFFC;
  --color-stroke: #404040;
  --color-theme-primary: #8bb8df;
  --color-theme-primary-glare: #b3d2ea;
  --color-action-bg: var(--color-theme-primary-glare);
  --color-action-text: #663300;
  --color-theme-highlight: #ffb325;
  --color-theme-highlight-block: #404040;
  --color-theme-feature-text: #ffb325;
}

body {
  color: var(--color-text);
  background-color: var(--color-bg);
}

main {
  overflow: hidden;
}

::selection {
  color: var(--color-selection-text);
  background-color: var(--color-selection-bg);
}

/* lora-700 - latin */
@font-face {
  font-family: 'Lora';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Lora Bold"), local("Lora-Bold"), url("/fonts/lora-v13-latin-700.woff2") format("woff2"), url("/fonts/lora-v13-latin-700.woff") format("woff");
}

body {
  line-height: 1.56;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

h1,
h2,
h3 {
  font-family: 'Lora', serif;
}

h1 {
  font-size: 1.95rem;
}

h2 {
  font-size: 1.56rem;
}

h3 {
  font-size: 1.25rem;
}

@media (min-width: 48rem) {
  h1 {
    font-size: 3.05rem;
  }
  h2 {
    font-size: 2.44rem;
  }
  h3 {
    font-size: 1.95rem;
  }
}

/**
 * GLOBAL STYLES
 */
html,
body {
  height: 100%;
}

body {
  scroll-behavior: smooth;
  display: flex;
  flex-direction: column;
  border-top: 1px solid cyan;
}

main {
  flex: 1 0 auto;
}

main:focus {
  outline: none;
}

hr {
  display: block;
  height: 1px;
  max-width: 500px;
  background: var(--color-stroke);
  border: none;
  margin: 3.05rem auto;
}

/**
 * PROJECT IMPORTS
 */
.inner-wrapper {
  max-width: 52rem;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.post__footer h2 a, .skip-link:not(:focus),
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

.wrapper {
  max-width: 58rem;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

/* Emoji randomizer */
.button {
  display: inline-block;
  border: none;
  background-color: var(--color-action-bg);
  color: var(--color-action-text);
  padding: 0.8rem 1rem;
  line-height: 1;
  margin: 0;
  text-decoration: none;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.button:hover,
.button:focus {
  filter: brightness(1.2);
}

.button:focus:hover {
  outline: none;
}

.button:focus:not(:hover) {
  outline: 1px solid var(--color-action-text);
  outline-offset: -4px;
}

.button:active {
  transform: scale(0.99);
}

.heading-permalink {
  color: var(--color-theme-primary-glare);
  font-size: 0.8em;
  margin-left: 0.3em;
  margin-top: 0.2em;
}

@media (min-width: 48rem) {
  .heading-permalink {
    font-size: 0.6em;
    margin-top: 0.4em;
  }
}

.intro {
  background: var(--color-theme-highlight-block);
  background-image: linear-gradient(to left, white, var(--color-theme-highlight-block));
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25'%3E%3Cdefs%3E%3ClinearGradient id='a' gradientUnits='userSpaceOnUse' x1='0' x2='0' y1='0' y2='100%25' gradientTransform='rotate(240)'%3E%3Cstop offset='0' stop-color='%23ffb75e'/%3E%3Cstop offset='1' stop-color='%234FE'/%3E%3C/linearGradient%3E%3Cpattern patternUnits='userSpaceOnUse' id='b' width='540' height='450' x='0' y='0' viewBox='0 0 1080 900'%3E%3Cg fill-opacity='0.1'%3E%3Cpolygon fill='%23444' points='90 150 0 300 180 300'/%3E%3Cpolygon points='90 150 180 0 0 0'/%3E%3Cpolygon fill='%23AAA' points='270 150 360 0 180 0'/%3E%3Cpolygon fill='%23DDD' points='450 150 360 300 540 300'/%3E%3Cpolygon fill='%23999' points='450 150 540 0 360 0'/%3E%3Cpolygon points='630 150 540 300 720 300'/%3E%3Cpolygon fill='%23DDD' points='630 150 720 0 540 0'/%3E%3Cpolygon fill='%23444' points='810 150 720 300 900 300'/%3E%3Cpolygon fill='%23FFF' points='810 150 900 0 720 0'/%3E%3Cpolygon fill='%23DDD' points='990 150 900 300 1080 300'/%3E%3Cpolygon fill='%23444' points='990 150 1080 0 900 0'/%3E%3Cpolygon fill='%23DDD' points='90 450 0 600 180 600'/%3E%3Cpolygon points='90 450 180 300 0 300'/%3E%3Cpolygon fill='%23666' points='270 450 180 600 360 600'/%3E%3Cpolygon fill='%23AAA' points='270 450 360 300 180 300'/%3E%3Cpolygon fill='%23DDD' points='450 450 360 600 540 600'/%3E%3Cpolygon fill='%23999' points='450 450 540 300 360 300'/%3E%3Cpolygon fill='%23999' points='630 450 540 600 720 600'/%3E%3Cpolygon fill='%23FFF' points='630 450 720 300 540 300'/%3E%3Cpolygon points='810 450 720 600 900 600'/%3E%3Cpolygon fill='%23DDD' points='810 450 900 300 720 300'/%3E%3Cpolygon fill='%23AAA' points='990 450 900 600 1080 600'/%3E%3Cpolygon fill='%23444' points='990 450 1080 300 900 300'/%3E%3Cpolygon fill='%23222' points='90 750 0 900 180 900'/%3E%3Cpolygon points='270 750 180 900 360 900'/%3E%3Cpolygon fill='%23DDD' points='270 750 360 600 180 600'/%3E%3Cpolygon points='450 750 540 600 360 600'/%3E%3Cpolygon points='630 750 540 900 720 900'/%3E%3Cpolygon fill='%23444' points='630 750 720 600 540 600'/%3E%3Cpolygon fill='%23AAA' points='810 750 720 900 900 900'/%3E%3Cpolygon fill='%23666' points='810 750 900 600 720 600'/%3E%3Cpolygon fill='%23999' points='990 750 900 900 1080 900'/%3E%3Cpolygon fill='%23999' points='180 0 90 150 270 150'/%3E%3Cpolygon fill='%23444' points='360 0 270 150 450 150'/%3E%3Cpolygon fill='%23FFF' points='540 0 450 150 630 150'/%3E%3Cpolygon points='900 0 810 150 990 150'/%3E%3Cpolygon fill='%23222' points='0 300 -90 450 90 450'/%3E%3Cpolygon fill='%23FFF' points='0 300 90 150 -90 150'/%3E%3Cpolygon fill='%23FFF' points='180 300 90 450 270 450'/%3E%3Cpolygon fill='%23666' points='180 300 270 150 90 150'/%3E%3Cpolygon fill='%23222' points='360 300 270 450 450 450'/%3E%3Cpolygon fill='%23FFF' points='360 300 450 150 270 150'/%3E%3Cpolygon fill='%23444' points='540 300 450 450 630 450'/%3E%3Cpolygon fill='%23222' points='540 300 630 150 450 150'/%3E%3Cpolygon fill='%23AAA' points='720 300 630 450 810 450'/%3E%3Cpolygon fill='%23666' points='720 300 810 150 630 150'/%3E%3Cpolygon fill='%23FFF' points='900 300 810 450 990 450'/%3E%3Cpolygon fill='%23999' points='900 300 990 150 810 150'/%3E%3Cpolygon points='0 600 -90 750 90 750'/%3E%3Cpolygon fill='%23666' points='0 600 90 450 -90 450'/%3E%3Cpolygon fill='%23AAA' points='180 600 90 750 270 750'/%3E%3Cpolygon fill='%23444' points='180 600 270 450 90 450'/%3E%3Cpolygon fill='%23444' points='360 600 270 750 450 750'/%3E%3Cpolygon fill='%23999' points='360 600 450 450 270 450'/%3E%3Cpolygon fill='%23666' points='540 600 630 450 450 450'/%3E%3Cpolygon fill='%23222' points='720 600 630 750 810 750'/%3E%3Cpolygon fill='%23FFF' points='900 600 810 750 990 750'/%3E%3Cpolygon fill='%23222' points='900 600 990 450 810 450'/%3E%3Cpolygon fill='%23DDD' points='0 900 90 750 -90 750'/%3E%3Cpolygon fill='%23444' points='180 900 270 750 90 750'/%3E%3Cpolygon fill='%23FFF' points='360 900 450 750 270 750'/%3E%3Cpolygon fill='%23AAA' points='540 900 630 750 450 750'/%3E%3Cpolygon fill='%23FFF' points='720 900 810 750 630 750'/%3E%3Cpolygon fill='%23222' points='900 900 990 750 810 750'/%3E%3Cpolygon fill='%23222' points='1080 300 990 450 1170 450'/%3E%3Cpolygon fill='%23FFF' points='1080 300 1170 150 990 150'/%3E%3Cpolygon points='1080 600 990 750 1170 750'/%3E%3Cpolygon fill='%23666' points='1080 600 1170 450 990 450'/%3E%3Cpolygon fill='%23DDD' points='1080 900 1170 750 990 750'/%3E%3C/g%3E%3C/pattern%3E%3C/defs%3E%3Crect x='0' y='0' fill='url(%23a)' width='100%25' height='100%25'/%3E%3Crect x='0' y='0' fill='url(%23b)' width='100%25' height='100%25'/%3E%3C/svg%3E");
  background-attachment: fixed;
  background-size: cover;
  clip-path: polygon(0 0, 100% 0, 100% calc( 100% - 2.5em), 0% 100%);
}

.intro__summary {
  --flow-space: 1.25rem;
  font-size: 1.25rem;
  color: var(--color-bg);
}

.intro__summary a {
  color: currentColor;
}

.intro__summary a:hover {
  text-decoration: none;
}

.intro p {
  color: var(--color-text);
}

.intro__heading {
  max-width: 40ex;
  color: var(--color-bg);
  text-shadow: 1px 1px var(--color-text);
}

.intro__heading--compact {
  max-width: 20ex;
}

.nav__list {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: none;
}

.nav__list::-webkit-scrollbar {
  display: none;
}

.nav__list > * + * {
  margin-left: 1.25rem;
}

.nav .tags a {
  border-radius: 3px;
  border: 1px solid var(--color-dark);
  border-top: unset;
  border-left: unset;
}

.nav__item {
  padding: 0.8rem 0;
  flex-shrink: 0;
}

.nav__item a {
  color: currentColor;
  font-weight: 600;
}

.nav__item a:not(:hover) {
  text-decoration: none;
}

.pagination {
  flex-wrap: wrap;
}

.pagination a {
  color: var(--color-theme-primary);
}

.pagination a:not(:hover) {
  text-decoration: none;
}

.pagination a[data-direction='backwards'] {
  flex-direction: row-reverse;
}

.pagination a[data-direction='backwards'] svg {
  transform: rotate(-180deg);
}

.pagination a[data-direction='forwards']:only-child {
  margin-left: auto;
}

.pagination svg {
  pointer-events: none;
}

.post__body {
  --flow-space: 2.44rem;
  /**
     * Generic HTML styles 
     */
}

.post__body h2 + *,
.post__body h3 + * {
  --flow-space: 1.25rem;
}

.post__body h2,
.post__body h3 {
  position: relative;
  /*display: flex;*/
  line-height: 1.2;
}

.post__body a:not([class]) {
  color: var(--color-dark);
  position: relative;
  display: inline-block;
  background: var(--color-theme-highlight);
  padding: 0.2rem 0.4rem 0.3rem 0.4rem;
  text-decoration: none;
  word-break: break-word;
  line-height: 1.2;
}

.post__body a:not([class]):hover {
  text-decoration: underline;
}

.post__body code {
  font-size: 1.2em;
  color: var(--color-theme-primary);
  font-weight: 600;
  margin-left: 0.01ch;
  margin-right: 0.01ch;
}

.post__body pre > code {
  margin-right: 0;
  border: 1px solid rgba(255, 255, 255, 0.1);
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

.post__body blockquote {
  border-left: 0.4rem solid var(--color-theme-primary-glare);
  margin-left: 0;
  padding-left: 1.25rem;
  font-style: italic;
  font-size: 1.56rem;
}

.post__body blockquote p {
  opacity: 0.85;
  padding: 1.25rem 0;
}

.post__body ol:not([class]),
.post__body ul:not([class]) {
  margin-left: 2.44rem;
}

.post__body ol:not([class]) li + li,
.post__body ul:not([class]) li + li {
  margin-top: 0.8rem;
}

.post__body figure,
.post__body figure + *,
.post__body pre > code,
.post__body .video-player,
.post__body .video-player + *,
.post__body video {
  --flow-space: 4rem;
}

.post__body figure,
.post__body pre > code,
.post__body .video-player,
.post__body video {
  width: 100vw;
  max-width: 58rem;
  margin-left: 50%;
  /*changing this value to 47% removes the horizontal scrollbar once the viewport is < 930px */
  transform: translateX(-50%);
  /* changing this value to 49% allows for the suggestion above to also eliminate the horizontal scroll. */
  position: relative;
}

.post__body figure img,
.post__body pre > code,
.post__body .video-player {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
}

.post__body figure img {
  position: relative;
  z-index: 1;
}

.post__body figcaption {
  font-size: 0.8em;
  font-style: italic;
  max-width: 52rem;
  margin: 0.5rem auto 0 auto;
  padding: 0 1.25rem;
}

.post__body pre > code {
  display: block;
  background: var(--color-dark);
  padding: 1.95rem;
  font-size: 1.25rem;
}

.post__footer {
  background: var(--color-theme-highlight);
}

.post__footer h2 {
  flex-shrink: 0;
  margin-right: 1rem;
  color: var(--color-dark);
}

.post__footer a {
  background: var(--color-bg);
  padding: 0.4rem 0.6rem;
}

.post-list__item {
  --flow-space: 1.95rem;
}

.post-list__link, .post-list__link:visited {
  color: var(--color-theme-primary);
  text-decoration: underline;
}

.post-list__link:hover {
  text-decoration: none;
}

.site-head__site-name {
  font-weight: 700;
  text-decoration: none;
  color: var(--color-text);
}

.site-head__site-name:nth-of-type(2):before {
  content: "👩🏿‍💻";
  font-size: 3rem;
  opacity: 0.8;
}

.site-foot {
  position: relative;
  background: var(--color-bg-glare);
  color: var(--color-text);
}

.site-foot::before {
  content: "";
  background: linear-gradient(to right, var(--color-stroke), cyan);
  position: absolute;
  width: 100%;
  height: 3px;
  top: 0;
  left: 0;
}

.site-foot a {
  color: currentColor;
}

.site-foot a:hover {
  text-decoration: none;
}

.site-foot__credit {
  text-align: center;
}

.site-foot__details h2 + p:before {
  content: "👩🏿‍💻 ";
  font-size: 1.4rem;
  opacity: 0.8;
}

.skip-link:focus {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  padding: 0.8rem 1.25rem 1rem 1.25rem;
  background-color: var(--color-action-bg);
  color: var(--color-action-text);
  line-height: 1;
  text-decoration: none;
  font-weight: 700;
}

/**
 * a11y-dark theme for JavaScript, CSS, and HTML
 * Based on the okaidia theme: https://github.com/PrismJS/prism/blob/gh-pages/themes/prism-okaidia.css
 * @author ericwbailey
 */
code[class*='language-'],
pre[class*='language-'] {
  color: #f8f8f2;
  background: none;
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  text-align: left;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  -moz-tab-size: 2;
  -o-tab-size: 2;
  tab-size: 2;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Inline code */
:not(pre) > code[class*='language-'] {
  padding: 0.1em;
  border-radius: 0.3em;
  white-space: normal;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #d4d0ab;
}

.token.punctuation {
  color: #fefefe;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
  color: #ffa07a;
}

.token.boolean,
.token.number {
  color: #00e0e0;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #abe338;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
  color: #00e0e0;
}

.token.atrule,
.token.attr-value,
.token.function {
  color: #ffd700;
}

.token.keyword {
  color: #00e0e0;
}

.token.regex,
.token.important {
  color: #ffd700;
}

.token.important,
.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

@media screen and (-ms-high-contrast: active) {
  code[class*='language-'],
  pre[class*='language-'] {
    color: windowText;
    background: window;
  }
  :not(pre) > code[class*='language-'],
  pre[class*='language-'] {
    background: window;
  }
  .token.important {
    background: highlight;
    color: window;
    font-weight: normal;
  }
  .token.atrule,
  .token.attr-value,
  .token.function,
  .token.keyword,
  .token.operator,
  .token.selector {
    font-weight: bold;
  }
  .token.attr-value,
  .token.comment,
  .token.doctype,
  .token.function,
  .token.keyword,
  .token.operator,
  .token.property,
  .token.string {
    color: highlight;
  }
  .token.attr-value,
  .token.url {
    font-weight: normal;
  }
}

.video-player {
  position: relative;
  padding-top: 56.25%;
}

.video-player > iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.post .video-player {
  padding-top: 63%;
}

@media (min-width: 48rem) {
  .post .video-player {
    padding-top: 66%;
  }
}
